區分註冊
abstraction
IHealthCheck ---給使用者擴充
HealthCheckResult ---使用者擴充固定回傳格式
HealthStatus ---區分健康等級
IHealthCheckPublish ---定期執行
HealthCheckRegistration ---擴充實作IHealthCheck參數
HealthCheckContext 存取 HealthCheckRegistration
HealthReport ---回傳報告
HelathReportEntry ---report子集合


Health 註冊實作
IHealthChecksBuilder ---註冊IServiceCollection 擴展
HealthChecksBuilder ---實作HealthCheckRegistration 單一個註冊
HealthCheckServiceOptions ----IHealthCheck HealthCheckRegistration 多個註冊到 
HealthChecksService ---實作Default abstract
DefaultHealthCheckService ---實作Default
DelegateHealthCheck ---實作Default
HealthCheckPublisherHostedService ---IHostedService
HealthCheckPublisherOptions ---重新更新 30秒
HealthCheckLogScope ---紀錄log

HealthCheckServiceCollectionExtensions --AddCheck 擴充
HealthChecksBuilderDelegateExtensions --AddCheck 擴充
HealthChecksBuilderAddCheckExtensions --AddHealthChecks Default


區分中間曾
HealthCheckApplicationBuilderExtensions middleware擴充UseHealthChecks -?MapWhen<HealthCheckMiddleware>
HealthCheckEndpointRouteBuilderExtensions Endpoint middleware擴充UseHealthChecks -?MapWhen<HealthCheckMiddleware>

HealthCheckMiddleware

https://www.youtube.com/watch?v=r1FbKiHYHcw
https://www.youtube.com/watch?v=ptrN0hkYpF4
https://www.coder.work/article/1649864

https://docs.microsoft.com/zh-tw/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-2.1&tabs=visual-studio
https://ithelp.ithome.com.tw/articles/10206253

1qk2wi3ek4ri@gmail.com

systemctl enable docker

Prometheus and Grafana 格式說明
https://www.uyuni-project.org/uyuni-docs/uyuni/administration/monitoring.html
systemctl status -l kubelet.service

https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
https://blog.csdn.net/qq_21816375/article/details/81273201
kubeadm init phase kubelet-start
https://www.cnblogs.com/primadonna/p/11359476.html
https://www.cnblogs.com/horizonli/p/10855666.html
https://phoenixnap.com/kb/how-to-install-kubernetes-on-centos
https://gunnarpeipman.com/aspnet-core-health-checks-grafana-influxdb/
https://k2r2bai.com/2019/09/20/ironman2020/day05/
https://docs.aws.amazon.com/zh_tw/vpc/latest/userguide/default-vpc.html
https://k8smeetup.github.io/docs/admin/kubeadm
https://www.youtube.com/watch?v=l7gC4SgW7DU


[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl

yum install -y kubeadm kubelet kubectl
setenforce 0
sed -i 's/^SELINUX=.*/SELINUX=disabled/' /etc/selinux/config
swapoff -a
sed -i 's/.*swap.*/#&/' /etc/fstab
systemctl enable kubelet
systemctl start kubelet
systemctl status -l kubelet.service
systemctl daemon-reload
systemctl restart kubelet.service
systemctl status -l kubelet.service
journalctl -xefu kubelet

kubeadm init phase kubelet-start
kubeadm init
kubectl get pods --namespace=kube-system
kubeadm reset

###############################k8s安裝 master #######
cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
EOF

sudo setenforce 0
sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
swapoff -a
sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sudo sysctl --system

sudo systemctl enable --now kubelet

kubeadm init --pod-network-cidr=172.31.0.0/16

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

kubeadm token create --print-join-command
get pod -n kube-system -l k8s-app=kube-dns
rm -rf $HOME/.kube


kubectl get cs

##############ubuntu##################################
sudo apt-get update
sudo apt-get install docker.io -y

sudo apt-get update && sudo apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

kubeadm init --apiserver-advertise-address=172.31.40.255 --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=NumCPU


kubeadm join 172.31.40.255:6443 --token 1x4q5o.ofuzgns95h94iuvr \
    --discovery-token-ca-cert-hash sha256:9828df451588e9556a6d8a0255e0cb2b397bcc16ef834fdb8800707459efc199 

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config
sysctl net.bridge.bridge-nf-call-iptables=1
  iptables -P FORWARD ACCEPT

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
kubectl apply -f https://raw.githubusercontent.com/cloudnativelabs/kube-router/master/daemonset/kubeadm-kuberouter.yaml
kubectl get pods --namespace=kube-system

#############################################helm###################################################
curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
chmod 700 get_helm.sh
./get_helm.sh


#############################################k8sdashboard#######################################################
wget https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml
vim kubernetes-dashboard.yaml

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kube-system
spec:
  ports:
    - port: 443
      targetPort: 8443
  type: NodePort(修改)
  selector:
    k8s-app: kubernetes-dashboard

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubernetes-dashboard-minimal
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard
  namespace: kube-system

kubectl create -f kubernetes-dashboard.yaml

https://52.195.19.119:31986/#!/login




https://www.jianshu.com/p/6f42ac331d8a
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta8/aio/deploy/recommended.yaml
wget https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/alternative/kubernetes-dashboard.yaml
https://13.231.41.227:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login
https://juejin.im/post/6844903903394267143





###############################prometheus###############################################
curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
chmod 700 get_helm.sh
./get_helm.sh

helm version
helm repo add stable https://kubernetes-charts.storage.googleapis.com
helm repo update


helm install prometheus stable/prometheus-operator

helm repo add stable https://kubernetes-charts.storage.googleapis.com/



