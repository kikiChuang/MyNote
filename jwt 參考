https://dev.to/_patrickgod/authentication-with-json-web-tokens-in-net-core-3-1-29bd

https://www.jerriepelser.com/blog/manually-validating-rs256-jwt-dotnet/

https://dotblogs.com.tw/yc421206/2019/01/07/authentication_via_jwt-dotnet

https://github.com/oneal32xx/JWT/tree/master/JwtTest/Jwt

https://dotnetcoretutorials.com/2020/01/15/creating-and-validating-jwt-tokens-in-asp-net-core/

https://iter01.com/429830.html



        [HttpPost]
        public ActionResult Index(LoginViewModel model)
        {
            HttpCookie cookie = new HttpCookie("search");
            cookie.Values["dep_name"] = "test";
            cookie.Expires = DateTime.Now.AddDays(1);
            Response.Cookies.Add(cookie);
            return Redirect("http://localhost:53344");
        }
        
   private readonly IHttpContextAccessor _httpContextAccessor;

        public HomeController(ILogger<HomeController> logger, IHttpContextAccessor httpContextAccessor)
        {
            _logger = logger;
            _httpContextAccessor = httpContextAccessor;
        }

        public IActionResult Index()
        {
            string cookieValueFromContext = _httpContextAccessor.HttpContext.Request.Cookies["search"];
            return View();
        }
        
        
不要存放敏感資料在 Token 裡
Payload 中的 exp 時效不要設定太長
如果擔心 replay attacks 可以多宣告 jti, exp
開啟 Http only 預防 XSS 攻擊
在你的 Application 應用層中增加黑名單機制，必要的時候可以進行 Block 做阻擋 (這是針對掉 Token 被第三方使用竊取的的手動防禦)
通知回覆沒有cookie
